
let prop_id_nat =
    (fix f x -> case x | .0 -> .0 | .Suc x' -> .Suc (f x') end) =< fn x -> x ;

let prop_add_is_add =
    .add x y =< .add x y ;

let prop_add_assoc =
    .add (.add x y) z =< .add x (.add y z) ;

let prop_revSnoc =
    .rev (.app xs (.Cons n .Nil)) =< .revSnoc n xs ;

let prop_rev_self_inverse =
    .rev (.rev xs) =< xs ;

let prop_take_drop =
    .app (.take n xs) (.drop n xs) =< xs ;

